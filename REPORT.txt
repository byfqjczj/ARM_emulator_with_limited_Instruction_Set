- List all variants of the "add" instruction, explain why each is needed
Add immediate: adds a value and a value stored in a register, and then put this value in another register.
This is the bread and butter of doing addition, where we add a set value to a value currently stored. Useful for things that are incrementing a certain variable(stored in register) such as for loops.
Add shifted register: adds a value stored in a register and another value stored in a register(potentially shifted).
This is useful to represent the adding of two variables(which are both stored in the register for easy access). An example of this in C would be declaring two variables, and then adding them to get their sum as a third variable.
Add extended register: adds a value stored in a register and a sign or zero extended register value, and then stored in another register.
This is useful as a add on to the previous one, but instead you are looking for more flexibility by zero or sign extending the register value, which allows for more operations.
- What is an emulator? What is memory mapped I/O?
An emulator is a program that can imitate the behaviors and functionality of another computer system. It simulates things like memory control/access, register control/access, and can interpret commands that are native to the system it is trying to replicate and provide the correct output to these commands.
Memory mapped I/O is a designated part of memory which is used for only for communications with hardware devices(e.g. sensors).
This is ideal because it allows for clarity, as it creates a specifically alloted space for hardware devices, allowing for more standardized and simpler code for accessing memory for these harware devices.
